#This is a file that will contain instructions needed to start and configure the services
#we can install multi containers thanks to docker-compose
#<docke-compose.yml> file contains the service definitions for setup. 
#A <service> in Compose is a running container and service definitions specify info about how each container will run.

#latest version of docker-compose
version: '3.9'

#1 service - 1 container
#services - computing components of an application
#services communicate with each other through Networks.
services:
  #######MARIADB IMAGE#######
  mariadb:
  #name of the custom database container
    container_name: mariadb

    #<build> means the path to Dockerfile , that we use for creating an image to launch a service
    #mariadb and wordpress use the default images of WP and DB, provided directly by companies-no need to build own.
    build: ./services/mariadb

    #restart can save time, bcs we dont have to start container every time we reboot machine manually
    restart: always

    #we define envs for database authentification.Adds env vars to the container based on file content
    #It is useful for var inside YAML file that need to be expanded, or vars used by compose itself.
    env_file: .env


    #<volumes> basically mounts the volume db from host into /var/lib/mysql in the running mariadb container
    volumes:
      - db:/var/lib/mysql

    # <networks> we make sure that the containers we want to talk to each other are on the same network.
    # Networks are first-class docker construct,and not specific to compose.
    networks:
      - inception

  ####### WORDPRESS IMAGE#######
  wordpress:
    container_name: wordpress

    build: ./services/wordpress

    env_file: .env

    #<volumes> for persisting database data , a volume is created
    #the docker volume <db> persists any updates made by Wordpress to the database
    #wp contains all user-supplied content. Basically anything we can upload to site ends up here.
    volumes:
      - wp:/var/www/html/wordpress

    #we add container wordpress to the start-up network
    #it specifies that our application service will join the app-network network, which we vwill define at the bottom of the file.
    networks:
      - inception


    #<depends_on> expresses startup and shutdown dependencies between services
    #Compose implementations must create services in dependency order.
    #<depends_on> decides the dependency and the order of container creation.
    depends_on:
      - mariadb

  ####### NGINX IMAGE#######
  nginx:
    container_name: nginx

    build: ./services/nginx
    # entrypoint: ["sh", "-c", "sleep 2073600"]
    hostname: localhost

    volumes:
      - wp:/var/www/html/wordpress

    networks:
      - inception

    depends_on:
      - wordpress
      - mariadb

    #<ports> sets host IP, host port and container port in the form:
    #[HOST(our computer): ] : CONTAINER[/PROTOCOL]
    #we define this port to map the container to the local machine.
    ports:
      - "443:443"
    env_file: .env


  #If we use volume driver we can provide options for it. Then in each service, we can reference the volume by name
  #without having to specify the options again.If we have multiple services using volume we change the definition of it in one place
  #Volume section allows the configuration of named volumes that can be reused across multiple services.
  #DRIVER ---> specify which volume driver should be used for this volume.
  #DRIVER_OPTS ---> specifies a list of options as key-value pairs to pass to the driver for this volume.
  #Those options are driver-dependent.
volumes:
  db:
    name: db
    driver: local
    #<driver_opts> specifies a list of options as key-value pairs to pass to the driver for this network.
    driver_opts:
      type: none
      o: bind
      device: /home/${USER}/data/db
  wp:
    name: wp
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /home/${USER}/data/wp


#we create virtual network between containers, which is only visible for these conts.
networks:
  inception:
    driver: bridge





